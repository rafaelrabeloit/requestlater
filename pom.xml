<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.neptune.api.requestlater</groupId>
	<artifactId>requestlater</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<packaging>pom</packaging>

	<modules>
		<module>requestlater-api</module>
		<module>requestlater-it</module>
	</modules>

	<name>RequestLater</name>
	<description>RequestLater API Service</description>
	<url>http://pha.neptune.li/project/profile/12/</url>
	<inceptionYear>2015</inceptionYear>
	<licenses>
		<license>
			<name>UNLICENSED</name>
		</license>
	</licenses>
	<organization>
		<name>Neptune</name>
		<url>http://neptune.li</url>
	</organization>

	<issueManagement>
		<system>Phabricator Maniphest</system>
		<url>http://pha.neptune.li/maniphest/</url>
	</issueManagement>
	<ciManagement>
		<system>Jenkins</system>
		<url>http://jen.neptune.li/job/RequestDelayer/</url>
	</ciManagement>
	<distributionManagement>
		<repository>
			<uniqueVersion>false</uniqueVersion>
			<id>neptune.li</id>
			<url>sftp://neptune.li/srv/mvn</url>
		</repository>
	</distributionManagement>
	<scm>
		<connection>scm:git:http://pha.neptune.li/diffusion/ARDELAYER/requestdelayer.git</connection>
		<url>http://pha.neptune.li/diffusion/ARDELAYER/</url>
	</scm>

	<repositories>
		<repository>
			<id>neptune.li</id>
			<name>Neptune.li Private Repository</name>
			<url>sftp://neptune.li/srv/mvn</url>
		</repository>
	</repositories>

	<!-- Build Environments -->
	<profiles>
		<profile>
			<id>profile-development</id>
			<properties>
				<environment>development</environment>
				<deploy.user>rafael</deploy.user>
				<deploy.pass>rafael</deploy.pass>
				<deploy.url>http://127.0.0.1:8080/manager/text</deploy.url>

				<log4j2-config-test></log4j2-config-test>
				<prepare-production>false</prepare-production>
			</properties>
			<activation>
				<activeByDefault>true</activeByDefault>
				<property>
					<name>environment</name>
					<value>development</value>
				</property>
			</activation>
		</profile>
		<profile>
			<id>profile-staging</id>
			<properties>
				<environment>staging</environment>
				<deploy.user>tom-script</deploy.user>
				<deploy.pass>kT2#32CsAs</deploy.pass>
				<deploy.url>http://10.8.0.101:8080/manager/text</deploy.url>

				<log4j2-config-test>log4j2-test.xml</log4j2-config-test>
				<prepare-production>true</prepare-production>
			</properties>
			<activation>
				<property>
					<name>environment</name>
					<value>staging</value>
				</property>
			</activation>
		</profile>
		<profile>
			<id>profile-production</id>
			<properties>
				<environment>production</environment>
				<deploy.user>tom-script</deploy.user>
				<deploy.pass>Yc2I9zTUp#</deploy.pass>
				<deploy.url>http://10.8.0.1:8080/manager/text</deploy.url>

				<log4j2-config-test>log4j2-test.xml</log4j2-config-test>
				<prepare-production>true</prepare-production>
			</properties>
			<activation>
				<property>
					<name>environment</name>
					<value>production</value>
				</property>
			</activation>
		</profile>
	</profiles>

	<properties>

		<!-- CI, CD and IT -->
		<container-name>tomcat</container-name>
		<container-major>8</container-major>

		<!-- encoding -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<wagon-extension-version>2.10</wagon-extension-version>

		<!--java version -->
		<java-version>1.8</java-version>

		<!-- Build plugin versions -->
		<compiler-plugin-version>3.5.1</compiler-plugin-version>
		<dependency-plugin-version>2.10</dependency-plugin-version>
		<war-plugin-version>2.6</war-plugin-version>
		<cargo-plugin-version>1.5.0</cargo-plugin-version>
		<jacoco-plugin-version>0.7.7.201606060606</jacoco-plugin-version>
		<surefire-plugin-version>2.19.1</surefire-plugin-version>
		<failsafe-plugin-version>2.19.1</failsafe-plugin-version>
		<antrun-plugin-version>1.8</antrun-plugin-version>
		<help-plugin-version>2.2</help-plugin-version>

		<!-- Report plugin versions -->
		<project-info-plugin-version>2.9</project-info-plugin-version>
		<javadoc-plugin-version>2.10.4</javadoc-plugin-version>
		<javancss-plugin-version>2.1</javancss-plugin-version>
		<pmd-plugin-version>3.6</pmd-plugin-version>
		<jxr-plugin-version>2.5</jxr-plugin-version>
		<checkstyle-plugin-version>2.17</checkstyle-plugin-version>
		<findbugs-plugin-version>3.0.4</findbugs-plugin-version>
		<surefire-report-plugin-version>2.19.1</surefire-report-plugin-version>

		<!-- Dependency versions -->
		<!-- jax-rs -->
		<jersey-version>2.23.1</jersey-version>

		<!-- cdi -->
		<cdi-version>1.2</cdi-version>
		<weld-version>2.3.5.Final</weld-version>
		<jandex-version>2.0.3.Final</jandex-version>

		<!-- db -->
		<hibernate-version>5.2.2.Final</hibernate-version>
		<mysql-version>5.1.35</mysql-version>
		<h2-version>1.4.192</h2-version>

		<!-- log -->
		<log4j-version>2.3</log4j-version>

		<!-- test -->
		<junit-version>4.11</junit-version>
		<mockito-version>2.0.94-beta</mockito-version>

		<!--TODO: choose one! -->
		<httpclient-version>4.5.2</httpclient-version>
		<okhttp-version>3.4.1</okhttp-version>

		<!--TODO: to change this -->
		<joda-version>2.8.1</joda-version>
		<jackson-version>2.8.2</jackson-version>
		<jsoup-version>1.8.2</jsoup-version>

		<linking-lang-version>2.2.4</linking-lang-version>
		<validation-version>1.1.0.Final</validation-version>

		<!-- local dependencies -->
		<apitemplate-version>0.0.1-SNAPSHOT</apitemplate-version>
		<delayedqueue-version>0.0.1-SNAPSHOT</delayedqueue-version>

	</properties>

	<dependencyManagement>
		<dependencies>

			<!-- Jersey -->
			<dependency>
				<groupId>org.glassfish.jersey</groupId>
				<artifactId>jersey-bom</artifactId>
				<version>${jersey-version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<!-- Local -->
			<dependency>
				<groupId>com.neptune.api.template</groupId>
				<artifactId>template-server</artifactId>
				<version>${apitemplate-version}</version>
			</dependency>

			<dependency>
				<groupId>com.neptune.api.template</groupId>
				<artifactId>template-storage</artifactId>
				<version>${apitemplate-version}</version>
			</dependency>

			<dependency>
				<groupId>com.neptune.delayedqueue</groupId>
				<artifactId>delayedqueue</artifactId>
				<version>${delayedqueue-version}</version>
			</dependency>


			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time</artifactId>
				<version>${joda-version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>${httpclient-version}</version>
			</dependency>


			<!-- Linking language -->
			<dependency>
				<groupId>org.glassfish.web</groupId>
				<artifactId>javax.el</artifactId>
				<version>${linking-lang-version}</version>
			</dependency>

			<!-- Jackson Databind for Serialization config -->
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${jackson-version}</version>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson.datatype</groupId>
				<artifactId>jackson-datatype-joda</artifactId>
				<version>${jackson-version}</version>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson.datatype</groupId>
				<artifactId>jackson-datatype-hibernate5</artifactId>
				<version>${jackson-version}</version>
			</dependency>

			<!-- !!Hibernate!! -->

			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>${mysql-version}</version>
			</dependency>

			<dependency>
				<groupId>com.h2database</groupId>
				<artifactId>h2</artifactId>
				<version>${h2-version}</version>
			</dependency>

			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-entitymanager</artifactId>
				<version>${hibernate-version}</version>
			</dependency>

			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-c3p0</artifactId>
				<version>${hibernate-version}</version>
			</dependency>

			<!-- jsoup HTML parser library @ http://jsoup.org/ -->
			<dependency>
				<groupId>org.jsoup</groupId>
				<artifactId>jsoup</artifactId>
				<version>${jsoup-version}</version>
			</dependency>

			<!-- DI -->
			<dependency>
				<groupId>org.jboss.weld.servlet</groupId>
				<artifactId>weld-servlet-core</artifactId>
				<version>${weld-version}</version>
			</dependency>

			<dependency>
				<groupId>org.jboss</groupId>
				<artifactId>jandex</artifactId>
				<version>${jandex-version}</version>
			</dependency>

			<!-- Tests -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit-version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>${mockito-version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>com.squareup.okhttp3</groupId>
				<artifactId>okhttp</artifactId>
				<version>${okhttp-version}</version>
				<scope>test</scope>
			</dependency>

			<!-- Logger Core -->
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-core</artifactId>
				<version>${log4j-version}</version>
			</dependency>

			<!-- Logger Web -->
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-web</artifactId>
				<version>${log4j-version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>${project-info-plugin-version}</version>
				<configuration>
					<dependencyLocationsEnabled>false</dependencyLocationsEnabled>
				</configuration>
			</plugin>
		</plugins>
	</reporting>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>${war-plugin-version}</version>
				</plugin>

				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco-plugin-version}</version>
					<configuration>
						<output>file</output>
						<append>true</append>
					</configuration>
					<executions>
						<execution>
							<id>jacoco-initialize</id>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
						</execution>
						<execution>
							<id>jacoco-site</id>
							<phase>verify</phase>
							<goals>
								<goal>report</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>${dependency-plugin-version}</version>
				</plugin>

				<!-- compiler plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${compiler-plugin-version}</version>
					<inherited>true</inherited>
					<configuration>
						<source>${java-version}</source>
						<target>${java-version}</target>
						<encoding>${project.build.sourceEncoding}</encoding>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${surefire-plugin-version}</version>
					<configuration>
						<skipTests>false</skipTests>
						<excludes>
							<exclude>**/*IntegrationTest*.java</exclude>
						</excludes>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>${failsafe-plugin-version}</version>
					<configuration>
						<includes>
							<include>**/*IntegrationTest*</include>
						</includes>
					</configuration>
					<executions>
						<execution>
							<id>integration-test</id>
							<goals>
								<goal>integration-test</goal>
							</goals>
						</execution>
						<execution>
							<id>verify</id>
							<goals>
								<goal>verify</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.codehaus.cargo</groupId>
					<artifactId>cargo-maven2-plugin</artifactId>
					<version>${cargo-plugin-version}</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>${antrun-plugin-version}</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-help-plugin</artifactId>
					<version>${help-plugin-version}</version>
				</plugin>
			</plugins>
		</pluginManagement>

		<extensions>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ssh</artifactId>
				<version>${wagon-extension-version}</version>
			</extension>
		</extensions>
	</build>
</project>