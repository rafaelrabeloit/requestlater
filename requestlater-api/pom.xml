<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.neptune.api.requestlater</groupId>
		<artifactId>requestlater</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<artifactId>requestlater-api</artifactId>

	<packaging>war</packaging>

	<dependencies>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-joda</artifactId>
		</dependency>

		<!-- <dependency> -->
		<!-- <groupId>com.fasterxml.jackson.datatype</groupId> -->
		<!-- <artifactId>jackson-datatype-hibernate5</artifactId> -->
		<!-- </dependency> -->

		<!-- <dependency> -->
		<!-- <groupId>org.glassfish.jersey.media</groupId> -->
		<!-- <artifactId>jersey-media-moxy</artifactId> -->
		<!-- </dependency> -->

		<dependency>
			<groupId>com.neptune.api.template</groupId>
			<artifactId>template-server</artifactId>
		</dependency>

		<dependency>
			<groupId>com.neptune.api.template</groupId>
			<artifactId>template-storage</artifactId>
		</dependency>

		<dependency>
			<groupId>com.neptune.delayedqueue</groupId>
			<artifactId>delayedqueue</artifactId>
		</dependency>

		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
		</dependency>


		<!-- Linking language -->
		<dependency>
			<groupId>org.glassfish.web</groupId>
			<artifactId>javax.el</artifactId>
		</dependency>


		<!-- !!Jersey Dependencies!! -->

		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-server</artifactId>
		</dependency>

		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-servlet</artifactId>
		</dependency>

		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-json-jackson</artifactId>
		</dependency>

		<!-- Declarative Linking -->
		<dependency>
			<groupId>org.glassfish.jersey.ext</groupId>
			<artifactId>jersey-declarative-linking</artifactId>
		</dependency>

		<!-- CDI for jersey -->
		<dependency>
			<groupId>org.glassfish.jersey.ext.cdi</groupId>
			<artifactId>jersey-cdi1x</artifactId>
		</dependency>

		<dependency>
			<groupId>org.glassfish.jersey.ext.cdi</groupId>
			<artifactId>jersey-cdi1x-servlet</artifactId>
		</dependency>


		<!-- !!Hibernate!! -->

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-c3p0</artifactId>
		</dependency>


		<!-- DI -->
		<dependency>
			<groupId>org.jboss.weld.servlet</groupId>
			<artifactId>weld-servlet-core</artifactId>
		</dependency>

		<dependency>
			<groupId>org.jboss</groupId>
			<artifactId>jandex</artifactId>
		</dependency>

		<!-- Tests -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- H2 test database (see persistence.xml) -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Logger -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-web</artifactId>
		</dependency>

	</dependencies>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>${project-info-plugin-version}</version>
				<configuration>
					<dependencyLocationsEnabled>false</dependencyLocationsEnabled>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>${surefire-report-plugin-version}</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${javadoc-plugin-version}</version>
				<configuration>
					<show>private</show>
					<nohelp>true</nohelp>
				</configuration>
				<reportSets>
					<reportSet>
						<id>default</id>
						<reports>
							<report>javadoc</report>
						</reports>
					</reportSet>
					<reportSet>
						<id>aggregate</id>
						<reports>
							<report>aggregate</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>${pmd-plugin-version}</version>
				<configuration>
					<minimumTokens>100</minimumTokens>
					<linkXref>true</linkXref>
					<excludes>
						<exclude>**/*Bean.java</exclude>
						<exclude>**/generated/*.java</exclude>
					</excludes>
					<excludeRoots>
						<excludeRoot>target/generated-sources/stubs</excludeRoot>
					</excludeRoots>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>${jxr-plugin-version}</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${checkstyle-plugin-version}</version>
				<configuration>
					<linkXref>true</linkXref>
				</configuration>
				<reportSets>
					<reportSet>
						<reports>
							<report>checkstyle</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>${findbugs-plugin-version}</version>
				<configuration>
					<linkXref>true</linkXref>
					<xmlOutput>true</xmlOutput>
					<!-- Optional directory to put findbugs xdoc xml report -->
					<xmlOutputDirectory>target/site</xmlOutputDirectory>
				</configuration>
			</plugin>

		</plugins>
	</reporting>

	<build>
		<finalName>${project.artifactId}</finalName>

		<resources>
			<resource>
				<directory>${basedir}/src/main/resources</directory>
				<!-- Excludes Log4j2 test config explicitly -->
				<excludes>
					<exclude>${log4j2-config-test}</exclude>
				</excludes>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
			</plugin>

			<!-- compiler plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.codehaus.cargo</groupId>
				<artifactId>cargo-maven2-plugin</artifactId>
				<configuration>

					<container>
						<containerId>${container-name}${container-major}x</containerId>
						<type>remote</type>
					</container>

					<configuration>
						<type>runtime</type>
						<properties>
							<cargo.remote.uri>${deploy.url}</cargo.remote.uri>
							<cargo.remote.username>${deploy.user}</cargo.remote.username>
							<cargo.remote.password>${deploy.pass}</cargo.remote.password>
						</properties>
					</configuration>

					<deployables>
						<deployable>
							<groupId>${project.groupId}</groupId>
							<artifactId>${project.artifactId}</artifactId>
							<type>war</type>
						</deployable>
					</deployables>

				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target name="prepare-production" if="${prepare-production}">
								<replaceregexp
									match='(&lt;[\s]*?persistence-unit[\s]*? name="[a-zA-Z_.-]*?-test"[\s\S^>]*?&gt;[\s\S]*?&lt;[\s]*?\/[\s]*?persistence-unit[\s]*?&gt;)'
									replace="">
									<fileset dir="${project.build.outputDirectory}" includes="**/persistence.xml" />
								</replaceregexp>
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>

	</build>
</project>